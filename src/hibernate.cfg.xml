<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans" 
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
  xmlns:context="http://www.springframework.org/schema/context" 
  xmlns:aop="http://www.springframework.org/schema/aop"
   xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="  
        http://www.springframework.org/schema/beans  
        http://www.springframework.org/schema/beans/spring-beans.xsd  
        http://www.springframework.org/schema/context  
        http://www.springframework.org/schema/context/spring-context.xsd  
        http://www.springframework.org/schema/aop  
        http://www.springframework.org/schema/aop/spring-aop.xsd  
        http://www.springframework.org/schema/tx  
        http://www.springframework.org/schema/tx/spring-tx.xsd">  
  
    <!-- C3P0 数据源 -->  
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">  
        <property name="driverClass" value="${hibernate.connection.driver_class}" />  
        <property name="jdbcUrl" value="${hibernate.connection.url}" />  
        <property name="user" value="${hibernate.connection.username}" />  
        <property name="password" value="${hibernate.connection.password}" />  
        <property name="initialPoolSize" value="${hibernate.connection.initialPoolSize}" />  
        <property name="minPoolSize" value="${hibernate.connection.minPoolSize}" />  
        <property name="maxPoolSize" value="${hibernate.connection.maxPoolSize}" />  
        <!-- <property name="preferredTestQuery" value="select 1 from dual " />  --> 
    </bean>  
  
    <!-- SessionFactory --> 
    <!-- 配置Hibernate事务管理器 --> 
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">  
        <property name="dataSource" ref="dataSource" />  
        <property name="packagesToScan">
         <list>
         <value>com.webchatOil.model</value>
         </list>
        </property>
        <property name="hibernateProperties">  
            <props>  
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>  
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>  
                <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>  
                <prop key="hibernate.temp.use_jdbc_metadata_defaults">${hibernate.temp.use_jdbc_metadata_defaults}</prop>  
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>  
                <prop key="hibernate.cache.provider_class">${hibernate.cache.provider_class}</prop>  
                <prop key="hibernate.cache.use_query_cache">${hibernate.cache.use_query_cache}</prop>  
                <prop key="hibernate.cache.use_second_level_cache">${hibernate.cache.use_second_level_cache}</prop>  
                <prop key="hibernate.connection.autocommit">false</prop>
            </props>  
        </property> 
    </bean>  
  
  <!-- 用户角色信息 -->
  <bean id ="GeneralDAOImpl" class="com.webchatOil.dao.GeneralDAOImpl">
  <property name="sessionFactory" ref="sessionFactory"></property>
  </bean>
 
  <!-- 配置事务异常封装 -->
   <bean id="persistenceExceptionTranslationPostProcessor" 
       class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />
       
  <!--  声明式容器事务管理 ,transaction-manager指定事务管理器为transactionManager -->
  <tx:advice id="txAdvice" transaction-manager="txManager">
    <tx:attributes>
        <tx:method name="get*" read-only="true" />
        <tx:method name="*" />
    </tx:attributes>
</tx:advice>

<aop:config expose-proxy="true">
 <!-- 只对业务逻辑层实施事务 -->
    <aop:pointcut id="UserServiceOperation"
        expression="execution(* com.webchatOil.service.*(..))" />
        <!-- Advisor定义，切入点和通知分别为txPointcut、txAdvice -->
    <aop:advisor advice-ref="txAdvice" pointcut-ref="UserServiceOperation" />
</aop:config>
  
 <!-- 配置Hibernate事务管理器 -->
  <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">  
        <property name="sessionFactory" ref="sessionFactory" />  
  </bean>  
  
   <!-- 开始事务管理注解  -->
   <!-- 支持 @aspectj 标签注解 -->
  <aop:aspectj-autoproxy />  
  <!-- 支持注解 -->
  <tx:annotation-driven />  
</beans>

<!--  配置持久化映射文件  map class 取代 xml 
         <property name="mappingLocations">  
          mappingResources、mappingLocations、mappingDirectoryLocations、mappingJarLocations
          <list>  
            <value>classpath:com/webchatOil/model/*.hbm.xml</value>  
         </list> 
        </property>
-->
